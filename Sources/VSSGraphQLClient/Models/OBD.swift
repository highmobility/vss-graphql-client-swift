//
//  OBD.swift
//  VSSGraphQL
//
//  Generated by VSSGraphQL on 14.10.2020.
//  Copyright Â© 2020 High Mobility GmbH. All rights reserved.
//

import Foundation


public struct OBD: GraphQLType {

    /// PID 43 - Absolute load value
    public var absoluteLoad: Int? = nil

    /// PID 49 - Accelerator pedal position D
    public var acceleratorPositionD: Int? = nil

    /// PID 4A - Accelerator pedal position E
    public var acceleratorPositionE: Int? = nil

    /// PID 4B - Accelerator pedal position F
    public var acceleratorPositionF: Int? = nil

    /// PID 12 - Secondary air status
    public var airStatus: String? = nil

    /// PID 46 - Ambient air temperature
    public var ambientAirTemperature: Float? = nil

    /// PID 1E - Auxiliary input status (power take off)
    public var auxInputStatus: Bool? = nil

    /// PID 33 - Barometric pressure
    public var barometricPressure: Float? = nil

    public var catalyst: OBDCatalyst? = nil

    /// PID 2C - Commanded exhaust gas recirculation (EGR)
    public var commandedEGR: Int? = nil

    /// PID 2E - Commanded evaporative purge (EVAP) valve
    public var commandedEVAP: Int? = nil

    /// PID 44 - Commanded equivalence ratio
    public var commandedEquivalenceRatio: Float? = nil

    /// PID 42 - Control module voltage
    public var controlModuleVoltage: Float? = nil

    /// PID 05 - Coolant temperature
    public var coolantTemperature: Float? = nil

    /// PID 31 - Distance traveled since codes cleared
    public var distanceSinceDTCClear: Float? = nil

    /// PID 21 - Distance traveled with MIL on
    public var distanceWithMIL: Float? = nil

    public var driveCycleStatus: OBDDriveCycleStatus? = nil

    /// PID 2D - Exhaust gas recirculation (EGR) error
    public var egrError: Int? = nil

    /// PID 32 - Evaporative purge (EVAP) system pressure
    public var evapVaporPressure: Float? = nil

    /// PID 53 - Absolute evaporative purge (EVAP) system pressure
    public var evapVaporPressureAbsolute: Float? = nil

    /// PID 54 - Alternate evaporative purge (EVAP) system pressure
    public var evapVaporPressureAlternate: Float? = nil

    /// PID 04 - Engine load in percent - 0 = no load, 100 = full load
    public var engineLoad: Int? = nil

    /// PID 0C - Engine speed measured as rotations per minute
    public var engineSpeed: Float? = nil

    /// PID 52 - Percentage of ethanol in the fuel
    public var ethanolPercent: Int? = nil

    /// PID 02 - DTC that triggered the freeze frame
    public var freezeDTC: String? = nil

    /// PID 5D - Fuel injection timing
    public var fuelInjectionTiming: Int? = nil

    /// PID 2F - Fuel level in the fuel tank
    public var fuelLevel: Int? = nil

    /// PID 0A - Fuel pressure
    public var fuelPressure: Float? = nil

    /// PID 59 - Absolute fuel rail pressure
    public var fuelRailPressureAbsolute: Float? = nil

    /// PID 23 - Fuel rail pressure direct inject
    public var fuelRailPressureDirect: Float? = nil

    /// PID 22 - Fuel rail pressure relative to vacuum
    public var fuelRailPressureVac: Float? = nil

    /// PID 5E - Engine fuel rate
    public var fuelRate: Float? = nil

    /// PID 03 - Fuel status
    public var fuelStatus: String? = nil

    /// PID 51 - Fuel type
    public var fuelType: String? = nil

    /// PID 5B - Remaining life of hybrid battery
    public var hybridBatteryRemaining: Int? = nil

    /// PID 0F - Intake temperature
    public var intakeTemp: Float? = nil

    /// PID 07 - Long Term (learned) Fuel Trim - Bank 1 - negative percent leaner, positive percent richer
    public var longTermFuelTrim1: Int? = nil

    /// PID 09 - Long Term (learned) Fuel Trim - Bank 2 - negative percent leaner, positive percent richer
    public var longTermFuelTrim2: Int? = nil

    /// PID 56 - Long term secondary O2 trim - Bank 1
    public var longTermO2Trim1: Int? = nil

    /// PID 58 - Long term secondary O2 trim - Bank 2
    public var longTermO2Trim2: Int? = nil

    /// PID 10 - Grams of air drawn into engine per second
    public var maf: Int? = nil

    /// PID 0B - Intake manifold pressure
    public var map: Float? = nil

    /// PID 50 - Maximum flow for mass air flow sensor
    public var maxMAF: Float? = nil

    public var o2: OBDO2? = nil

    public var o2Alt: OBDO2Alt? = nil

    public var o2WR: OBDO2WR? = nil

    /// PID 5C - Engine oil temperature
    public var oilTemperature: Int? = nil

    /// PID 00 - Bit array of the supported pids 01 to 20
    public var pidsA: Float? = nil

    /// PID 20 - Bit array of the supported pids 21 to 40
    public var pidsB: Float? = nil

    /// PID 40 - Bit array of the supported pids 41 to 60
    public var pidsC: Float? = nil

    /// PID 5A - Relative accelerator pedal position
    public var relativeAcceleratorPosition: Int? = nil

    /// PID 45 - Relative throttle position
    public var relativeThrottlePosition: Int? = nil

    /// PID 1F - Engine run time
    public var runTime: Float? = nil

    /// PID 4D - Run time with MIL on
    public var runTimeMIL: Float? = nil

    /// PID 06 - Short Term (immediate) Fuel Trim - Bank 1 - negative percent leaner, positive percent richer
    public var shortTermFuelTrim1: Int? = nil

    /// PID 08 - Short Term (immediate) Fuel Trim - Bank 2 - negative percent leaner, positive percent richer
    public var shortTermFuelTrim2: Int? = nil

    /// PID 55 - Short term secondary O2 trim - Bank 1
    public var shortTermO2Trim1: Int? = nil

    /// PID 57 - Short term secondary O2 trim - Bank 2
    public var shortTermO2Trim2: Int? = nil

    /// PID 0D - Vehicle speed
    public var speed: Float? = nil

    public var status: OBDStatus? = nil

    /// PID 4C - Commanded throttle actuator
    public var throttleActuator: Int? = nil

    /// PID 11 - Throttle position - 0 = closed throttle, 100 = open throttle
    public var throttlePosition: Int? = nil

    /// PID 47 - Absolute throttle position B
    public var throttlePositionB: Int? = nil

    /// PID 48 - Absolute throttle position C
    public var throttlePositionC: Int? = nil

    /// PID 4E - Time since trouble codes cleared
    public var timeSinceDTCCleared: Float? = nil

    /// PID 0E - Time advance
    public var timingAdvance: Float? = nil

    /// PID 30 - Number of warm-ups since codes cleared
    public var warmupsSinceDTCClear: Int? = nil
}