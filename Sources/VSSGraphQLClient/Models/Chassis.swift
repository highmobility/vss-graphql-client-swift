//
//  Chassis.swift
//  VSSGraphQL
//
//  Generated by VSSGraphQL on 21.10.2020.
//  Copyright Â© 2020 High Mobility GmbH. All rights reserved.
//

import Foundation


public struct Chassis: GraphQLObjectType {

    public var accelerator: ChassisAccelerator? = nil

    public var axle: ChassisAxle? = nil

    public var brake: ChassisBrake? = nil

    /// Vehicle curb weight, in kg, including all liquids and full tank of fuel, but no cargo or passengers.
    public var curbWeight: Int? = nil

    /// Curb weight of vehicle, including all liquids and full tank of fuel and full load of cargo and passengers.
    public var grossWeight: Int? = nil

    /// Overall vehicle height, in mm.
    public var height: Int? = nil

    /// Overall vehicle length, in mm.
    public var length: Int? = nil

    public var parkingBrake: ChassisParkingBrake? = nil

    public var steeringWheel: ChassisSteeringWheel? = nil

    /// Maximum weight, in kilos, of trailer.
    public var towWeight: Int? = nil

    /// Overall wheel tracking, in mm.
    public var track: Int? = nil

    public var trailer: ChassisTrailer? = nil

    /// Overall wheel base, in mm.
    public var wheelbase: Int? = nil

    /// Overall vehicle width, in mm.
    public var width: Int? = nil


    // MARK: GraphQLObjectType
    
    public static var scalars: [String : Any] {
        [
            "curbWeight" : Int.self,
            "grossWeight" : Int.self,
            "height" : Int.self,
            "length" : Int.self,
            "towWeight" : Int.self,
            "track" : Int.self,
            "wheelbase" : Int.self,
            "width" : Int.self
        ]
    }
    
    public static var objects: [String : GraphQLObjectType.Type] {
        [
            "accelerator" : ChassisAccelerator.self,
            "axle" : ChassisAxle.self,
            "brake" : ChassisBrake.self,
            "parkingBrake" : ChassisParkingBrake.self,
            "steeringWheel" : ChassisSteeringWheel.self,
            "trailer" : ChassisTrailer.self
        ]
    }
}