//
//  OutputFilesGenerator.swift
//  CodeGenerator
//
//  Created by Mikk Rätsep on 11.05.20.
//

import Combine
import Foundation


@available(macOS 10.15, *)
struct OutputFilesGenerator {

    static func publisher(fromContentsPub contentsPub: AnyPublisher<String, Never>,
                         entitiesPub: AnyPublisher<GenEntity, Never>,
                         outputFolder: URL) throws -> AnyPublisher<OutputFile, Never> {
        print("- creating output files...")

        let typeNamesPub = entitiesPub.map { $0.name.convertedToValidTypeName }
        let urlsPub = typeNamesPub.map { outputFolder.appendingPathComponent($0).appendingPathExtension("swift") }

        // Add a header and save the file
        // TODO: Fix the date
        return contentsPub
            .zip(typeNamesPub) { content, typeName -> String in
                """
                //
                //  \(typeName).swift
                //  VSSGraphQL
                //
                //  Generated by VSSGraphQL on 12.05.20.
                //  Copyright © 2020 High Mobility GmbH. All rights reserved.
                //

                \(content)
                """
            }
            .zip(urlsPub, typeNamesPub)
            .map { content, url, typeName in
                OutputFile(content: content,
                           path: url,
                           name: typeName)
            }
            .eraseToAnyPublisher()
    }


    private init() { }
}
