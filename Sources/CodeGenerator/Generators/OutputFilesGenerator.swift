//
//  OutputFilesGenerator.swift
//  CodeGenerator
//
//  Created by Mikk Rätsep on 11.05.20.
//

import Combine
import Foundation


@available(macOS 10.15, *)
struct OutputFilesGenerator {

    static func publisher(fromContentsPub contentsPub: AnyPublisher<String, Never>,
                         entitiesPub: AnyPublisher<GenEntity, Never>,
                         outputFolder: URL) throws -> AnyPublisher<OutputFile, Never> {
        print("- creating output files...")

        let typeNamesPub = entitiesPub.map { $0.name.convertedToValidTypeName }
        let urlsPub = typeNamesPub.map { outputFolder.appendingPathComponent($0).appendingPathExtension("swift") }

        return contentsPub
            .zip(typeNamesPub) { content, typeName -> String in
                let date = Date()
                let dateFormatter = DateFormatter()
                let yearFormatter = DateFormatter()

                dateFormatter.dateFormat = "dd.MM.YYYY"
                yearFormatter.dateFormat = "YYYY"

                return """
                //
                //  \(typeName).swift
                //  VSSGraphQL
                //
                //  Generated by VSSGraphQL on \(dateFormatter.string(from: date)).
                //  Copyright © \(yearFormatter.string(from: date)) High Mobility GmbH. All rights reserved.
                //

                \(content)
                """
            }
            .zip(urlsPub, typeNamesPub)
            .map { content, url, typeName in
                OutputFile(content: content,
                           path: url,
                           name: typeName)
            }
            .eraseToAnyPublisher()
    }


    private init() { }
}
