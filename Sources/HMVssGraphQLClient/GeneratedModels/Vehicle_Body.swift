import Artemis

/*
 This file was generated by Artemis for the following GraphQL object:

    type Vehicle_Body {
     """
     Body type code as defined by ISO 3779
     """
     bodyType: String
     hood: Vehicle_Body_Hood
     horn: Vehicle_Body_Horn
     lights: Vehicle_Body_Lights
     mirrors: Vehicle_Body_Mirrors
     raindetection: Vehicle_Body_Raindetection
     """
     Location of the fuel cap or charge port
     """
     refuelPosition: Vehicle_Body_RefuelPosition_Enum
     trunk: Vehicle_Body_Trunk
     windshield: Vehicle_Body_Windshield
   }
*/

final class Vehicle_Body: Object, ObjectSchema {

    /**
    Body type code as defined by ISO 3779
    */
    var bodyType = Field<String?, NoArguments>("bodyType")

    var hood = Field<Vehicle_Body_Hood?, NoArguments>("hood")

    var horn = Field<Vehicle_Body_Horn?, NoArguments>("horn")

    var lights = Field<Vehicle_Body_Lights?, NoArguments>("lights")

    var mirrors = Field<Vehicle_Body_Mirrors?, NoArguments>("mirrors")

    var raindetection = Field<Vehicle_Body_Raindetection?, NoArguments>("raindetection")

    /**
    Location of the fuel cap or charge port
    */
    var refuelPosition = Field<Vehicle_Body_RefuelPosition_Enum?, NoArguments>("refuelPosition")

    var trunk = Field<Vehicle_Body_Trunk?, NoArguments>("trunk")

    var windshield = Field<Vehicle_Body_Windshield?, NoArguments>("windshield")

}


public class Body: Model {

    typealias PartialType = Vehicle_Body

    public let bodyType: String?
    public let hood: Body_Hood?
    public let horn: Body_Horn?
    public let lights: Body_Lights?
    public let mirrors: Body_Mirrors?
    public let raindetection: Body_Raindetection?
    public let refuelPosition: Body_RefuelPosition_Enum?
    public let trunk: Body_Trunk?
    public let windshield: Body_Windshield?

    required init?(partial: Partial<PartialType?>) {
        bodyType = partial.bodyType ?? nil
        hood = Body_Hood(partial: partial.hood)
        horn = Body_Horn(partial: partial.horn)
        lights = Body_Lights(partial: partial.lights)
        mirrors = Body_Mirrors(partial: partial.mirrors)
        raindetection = Body_Raindetection(partial: partial.raindetection)
        refuelPosition = partial.refuelPosition ?? nil
        trunk = Body_Trunk(partial: partial.trunk)
        windshield = Body_Windshield(partial: partial.windshield)
    }
}
