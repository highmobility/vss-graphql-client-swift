import Artemis

/*
 This file was generated by Artemis for the following GraphQL object:

    type Vehicle_Cabin_Seat_Row2_Pos4 {
     airbag: Vehicle_Cabin_Seat_Row2_Pos4_Airbag
     cushion: Vehicle_Cabin_Seat_Row2_Pos4_Cushion
     """
     Does the seat have a passenger in it.
     """
     hasPassenger: Boolean
     headRestraint: Vehicle_Cabin_Seat_Row2_Pos4_HeadRestraint
     """
     Seat cooling / heating. 0 = off. -100 = max cold. +100 = max heat
     """
     heating: Int
     """
     Is the belt engaged.
     """
     isBelted: Boolean
     lumbar: Vehicle_Cabin_Seat_Row2_Pos4_Lumbar
     """
     Seat massage level. 0 = off. 100 = max massage.
     """
     massage: Int
     """
     Seat horizontal position. 0 = Frontmost. 1000 = Rearmost
     """
     position: Int
     """
     Recline level. -90 = Max forward recline. 90 max backward recline
     """
     recline: Int
     sideBolster: Vehicle_Cabin_Seat_Row2_Pos4_SideBolster
     switch: Vehicle_Cabin_Seat_Row2_Pos4_Switch
   }
*/

final class Vehicle_Cabin_Seat_Row2_Pos4: Object, ObjectSchema {

    var airbag = Field<Vehicle_Cabin_Seat_Row2_Pos4_Airbag?, NoArguments>("airbag")

    var cushion = Field<Vehicle_Cabin_Seat_Row2_Pos4_Cushion?, NoArguments>("cushion")

    /**
    Does the seat have a passenger in it.
    */
    var hasPassenger = Field<Bool?, NoArguments>("hasPassenger")

    var headRestraint = Field<Vehicle_Cabin_Seat_Row2_Pos4_HeadRestraint?, NoArguments>("headRestraint")

    /**
    Seat cooling / heating. 0 = off. -100 = max cold. +100 = max heat
    */
    var heating = Field<Int?, NoArguments>("heating")

    /**
    Is the belt engaged.
    */
    var isBelted = Field<Bool?, NoArguments>("isBelted")

    var lumbar = Field<Vehicle_Cabin_Seat_Row2_Pos4_Lumbar?, NoArguments>("lumbar")

    /**
    Seat massage level. 0 = off. 100 = max massage.
    */
    var massage = Field<Int?, NoArguments>("massage")

    /**
    Seat horizontal position. 0 = Frontmost. 1000 = Rearmost
    */
    var position = Field<Int?, NoArguments>("position")

    /**
    Recline level. -90 = Max forward recline. 90 max backward recline
    */
    var recline = Field<Int?, NoArguments>("recline")

    var sideBolster = Field<Vehicle_Cabin_Seat_Row2_Pos4_SideBolster?, NoArguments>("sideBolster")

    var `switch` = Field<Vehicle_Cabin_Seat_Row2_Pos4_Switch?, NoArguments>("switch")

}


public class Cabin_Seat_Row2_Pos4: Model {

    typealias PartialType = Vehicle_Cabin_Seat_Row2_Pos4

    public let airbag: Cabin_Seat_Row2_Pos4_Airbag?
    public let cushion: Cabin_Seat_Row2_Pos4_Cushion?
    public let hasPassenger: Bool?
    public let headRestraint: Cabin_Seat_Row2_Pos4_HeadRestraint?
    public let heating: Int?
    public let isBelted: Bool?
    public let lumbar: Cabin_Seat_Row2_Pos4_Lumbar?
    public let massage: Int?
    public let position: Int?
    public let recline: Int?
    public let sideBolster: Cabin_Seat_Row2_Pos4_SideBolster?
    public let `switch`: Cabin_Seat_Row2_Pos4_Switch?

    required init?(partial: Partial<PartialType?>) {
        airbag = Cabin_Seat_Row2_Pos4_Airbag(partial: partial.airbag)
        cushion = Cabin_Seat_Row2_Pos4_Cushion(partial: partial.cushion)
        hasPassenger = partial.hasPassenger ?? nil
        headRestraint = Cabin_Seat_Row2_Pos4_HeadRestraint(partial: partial.headRestraint)
        heating = partial.heating ?? nil
        isBelted = partial.isBelted ?? nil
        lumbar = Cabin_Seat_Row2_Pos4_Lumbar(partial: partial.lumbar)
        massage = partial.massage ?? nil
        position = partial.position ?? nil
        recline = partial.recline ?? nil
        sideBolster = Cabin_Seat_Row2_Pos4_SideBolster(partial: partial.sideBolster)
        `switch` = Cabin_Seat_Row2_Pos4_Switch(partial: partial.`switch`)
    }
}
